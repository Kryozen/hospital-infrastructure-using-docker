version: "3.8"

services:
  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - net1
      - net2
      - net3
  
  vhost1:
    container_name: vhost1
    command: sleep infinity
    build:
      context: ./vhost1
      dockerfile: Dockerfile
    volumes:
      - ./vhost1:/var/www/html
    networks:
      - net1
  
  vhost2:
    container_name: vhost2
    command: sleep infinity
    build:
      context: ./vhost2
      dockerfile: Dockerfile
    volumes:
      - ./vhost2:/var/www/html
    networks:
      - net2
  
  vhost3:
    container_name: vhost3
    command: sleep infinity
    build:
      context: ./vhost3
      dockerfile: Dockerfile
    networks:
      - net3
  
  vhost4:
    container_name: vhost4
    command: sleep infinity
    build:
      context: ./vhost4
      dockerfile: Dockerfile
    networks:
      - net3
      
  database:
    image: mysql:latest
    container_name: database
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hospital_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes: 
      - db_data:/var/lib/mysql
      - ./database/scripts:/var/db/
    networks:
      - net1
      - net2
  
  startup:
    container_name: startup
    command: ansible-playbook /opt/playbook.yml
    build:
      context: ./startup
      dockerfile: Dockerfile
    volumes:
      - ./startup:/opt
      - //var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - vhost1
      - vhost2
      - database
      - proxy
    networks:
      - net1
      - net2
      - net3

volumes:
  db_data:

networks:
  net1:
  net2:
  net3: